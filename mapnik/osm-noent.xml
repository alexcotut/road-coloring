<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map [
<!ENTITY % entities SYSTEM "inc/entities.xml.inc">
<!ENTITY % settings SYSTEM "settings.xml.inc">
<!--
Settings for symbols, the spatial reference of your postgis tables, coastline shapefiles directory, and their prefix names.
--><!-- use 'symbols' unless you have moved the symbols directory --><!ENTITY symbols "symbols">
<!-- use the '&srs900913;' entity if you have called osm2pgsql without special flags (or with -m); use '&srs4326;' if you have used -l --><!ENTITY osm2pgsql_projection "&srs900913;">
<!-- used for 'node in way' ST_DWithin spatial operations --><!-- Use 0.1 (meters) when your database is in 900913     --><!-- Use 0.000001 (degrees) when your database is in 4326 --><!ENTITY dwithin_900913 "0.1">
<!ENTITY dwithin_4326 "0.00001">
<!ENTITY dwithin_node_way "&dwithin_900913;">
<!-- use 'world_boundaries', which is the usual naming for the local folder the coastline shapefiles are unzipped into --><!ENTITY world_boundaries "world_boundaries">
<!-- use 'planet_osm' unless you have customized your database table prefix using the osm2pgsql 'prefix' flag --><!ENTITY prefix "planet_osm">
<!ENTITY datasource-settings SYSTEM "datasource-settings.xml.inc">
<!ENTITY fontset-settings SYSTEM "fontset-settings.xml.inc">
<!ENTITY srs900913 "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
<!ENTITY srsmercator "+proj=merc +datum=WGS84 +over">
<!ENTITY srs4326 "+init=epsg:4326">
<!ENTITY excellent_color "#0000ff">
<!ENTITY good_color "#376f00">
<!ENTITY intermediate_color "#ff9f00">
<!ENTITY bad_color "#ff0000">
<!ENTITY horrible_color "#ff00ff">
<!ENTITY motorway56stroke "1.5">
<!ENTITY motorway78stroke "3.2">
<!ENTITY motorway9stroke "4.2">
<!ENTITY motorway10stroke "5.2">
<!ENTITY motorway1113stroke "5.3">
<!ENTITY trunk56stroke "0.7">
<!ENTITY trunk78stroke "1.5">
<!ENTITY trunk910stroke "2.2">
<!ENTITY trunk1113stroke "2.8">
<!ENTITY primary78stroke "0.7">
<!ENTITY primary9stroke "1.5">
<!ENTITY primary10stroke "1.9">
<!ENTITY primary1113stroke "2.5">
<!ENTITY secondary8stroke "1.1">
<!ENTITY secondary910stroke "1.3">
<!ENTITY secondary1113stroke "2.2">
<!ENTITY tertiary1113stroke "2.1">
<!ENTITY maxscale_zoom0 "<MaxScaleDenominator>250000000000</MaxScaleDenominator>">
<!ENTITY maxscale_zoom1 "<MaxScaleDenominator>500000000</MaxScaleDenominator>">
<!ENTITY minscale_zoom1 "<MinScaleDenominator>200000000</MinScaleDenominator>">
<!ENTITY maxscale_zoom2 "<MaxScaleDenominator>200000000</MaxScaleDenominator>">
<!ENTITY minscale_zoom2 "<MinScaleDenominator>100000000</MinScaleDenominator>">
<!ENTITY maxscale_zoom3 "<MaxScaleDenominator>100000000</MaxScaleDenominator>">
<!ENTITY minscale_zoom3 "<MinScaleDenominator>50000000</MinScaleDenominator>">
<!ENTITY maxscale_zoom4 "<MaxScaleDenominator>50000000</MaxScaleDenominator>">
<!ENTITY minscale_zoom4 "<MinScaleDenominator>25000000</MinScaleDenominator>">
<!ENTITY maxscale_zoom5 "<MaxScaleDenominator>25000000</MaxScaleDenominator>">
<!ENTITY minscale_zoom5 "<MinScaleDenominator>12500000</MinScaleDenominator>">
<!ENTITY maxscale_zoom6 "<MaxScaleDenominator>12500000</MaxScaleDenominator>">
<!ENTITY minscale_zoom6 "<MinScaleDenominator>6500000</MinScaleDenominator>">
<!ENTITY maxscale_zoom7 "<MaxScaleDenominator>6500000</MaxScaleDenominator>">
<!ENTITY minscale_zoom7 "<MinScaleDenominator>3000000</MinScaleDenominator>">
<!ENTITY maxscale_zoom8 "<MaxScaleDenominator>3000000</MaxScaleDenominator>">
<!ENTITY minscale_zoom8 "<MinScaleDenominator>1500000</MinScaleDenominator>">
<!ENTITY maxscale_zoom9 "<MaxScaleDenominator>1500000</MaxScaleDenominator>">
<!ENTITY minscale_zoom9 "<MinScaleDenominator>750000</MinScaleDenominator>">
<!ENTITY maxscale_zoom10 "<MaxScaleDenominator>750000</MaxScaleDenominator>">
<!ENTITY minscale_zoom10 "<MinScaleDenominator>400000</MinScaleDenominator>">
<!ENTITY maxscale_zoom11 "<MaxScaleDenominator>400000</MaxScaleDenominator>">
<!ENTITY minscale_zoom11 "<MinScaleDenominator>200000</MinScaleDenominator>">
<!ENTITY maxscale_zoom12 "<MaxScaleDenominator>200000</MaxScaleDenominator>">
<!ENTITY minscale_zoom12 "<MinScaleDenominator>100000</MinScaleDenominator>">
<!ENTITY maxscale_zoom13 "<MaxScaleDenominator>100000</MaxScaleDenominator>">
<!ENTITY minscale_zoom13 "<MinScaleDenominator>50000</MinScaleDenominator>">
<!ENTITY maxscale_zoom14 "<MaxScaleDenominator>50000</MaxScaleDenominator>">
<!ENTITY minscale_zoom14 "<MinScaleDenominator>25000</MinScaleDenominator>">
<!ENTITY maxscale_zoom15 "<MaxScaleDenominator>25000</MaxScaleDenominator>">
<!ENTITY minscale_zoom15 "<MinScaleDenominator>12500</MinScaleDenominator>">
<!ENTITY maxscale_zoom16 "<MaxScaleDenominator>12500</MaxScaleDenominator>">
<!ENTITY minscale_zoom16 "<MinScaleDenominator>5000</MinScaleDenominator>">
<!ENTITY maxscale_zoom17 "<MaxScaleDenominator>5000</MaxScaleDenominator>">
<!ENTITY minscale_zoom17 "<MinScaleDenominator>2500</MinScaleDenominator>">
<!ENTITY maxscale_zoom18 "<MaxScaleDenominator>2500</MaxScaleDenominator>">
<!ENTITY minscale_zoom18 "">
]>
<Map background-color="transparent" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" minimum-version="2.0.0">
  <!--Settings for Mapnik Fonts
To see the fonts you have installed with Mapnik do:
ls `python -c "import mapnik;print mapnik.fontscollectionpath"`-->

<FontSet name="book-fonts">
  <Font face-name="DejaVu Sans Book"/>
  <Font face-name="Unifont Medium"/>
</FontSet>
<FontSet name="bold-fonts">
  <Font face-name="DejaVu Sans Bold"/>
  <Font face-name="Unifont Medium"/>
</FontSet>
<FontSet name="oblique-fonts">
  <Font face-name="DejaVu Sans Oblique"/>
  <Font face-name="Unifont Medium"/>
</FontSet>


  <Style name="roads">
    <Rule>
      <MaxScaleDenominator>25000000</MaxScaleDenominator>
      <MinScaleDenominator>6500000</MinScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke56]" stroke-dasharray="[dash56]"/>
    </Rule>
    
    <Rule>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <MinScaleDenominator>3000000</MinScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke7]" stroke-dasharray="[dash7]"/>
    </Rule>

    <Rule>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <MinScaleDenominator>1500000</MinScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke8]" stroke-dasharray="[dash8]"/>
    </Rule>

    <Rule>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke9]" stroke-dasharray="[dash9]"/>
    </Rule>

    <Rule>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <MinScaleDenominator>400000</MinScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke10]" stroke-dasharray="[dash10]"/>
    </Rule>
    
    <Rule>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke11]" stroke-dasharray="[dash11]"/>
    </Rule>
    <Rule>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <LineSymbolizer stroke="[color]" stroke-width="[stroke13]" stroke-dasharray="[dash11]"/>
    </Rule>
</Style>

<Style name="roads-text-name">
    <Rule>
      <Filter>[highway] = 'motorway' or [highway] = 'trunk'  and [has_smoothness]</Filter>
      <MaxScaleDenominator>6500000</MaxScaleDenominator>
      <MinScaleDenominator>3000000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="30" margin="30" size="7" spacing="0" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1.5">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'motorway' or [highway] = 'trunk' or [highway] = 'primary'  and [has_smoothness] </Filter>
      <MaxScaleDenominator>3000000</MaxScaleDenominator>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="30" margin="30" size="8" spacing="0" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1.5">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'secondary'  and [has_smoothness]</Filter>
      <MaxScaleDenominator>1500000</MaxScaleDenominator>
      <MinScaleDenominator>750000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="8" spacing="0" fill="black" placement="line" fontset-name="book-fonts" halo-radius="1" halo-fill="white">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'motorway' or [highway] = 'trunk' or [highway] = 'primary'  and [has_smoothness] </Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="30" margin="30" size="10" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1.5">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'secondary' and [has_smoothness] </Filter>
      <MaxScaleDenominator>750000</MaxScaleDenominator>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="8" fill="black" placement="line" fontset-name="book-fonts" halo-radius="1" halo-fill="white">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'motorway' or [highway] = 'trunk' or [highway] = 'primary'</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="30" margin="30" size="10" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'motorway' or [highway] = 'trunk' or [highway] = 'primary'</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      
      <TextSymbolizer repeat-distance="30" margin="30" size="10" fill="black" placement="line" fontset-name="book-fonts" halo-fill="white" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'secondary'</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <MinScaleDenominator>25000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="9" fill="black" placement="line" fontset-name="book-fonts" halo-radius="1" halo-fill="white">[survey_year]</TextSymbolizer>
    </Rule><Rule>
      <Filter>[highway] = 'secondary'</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      
      <TextSymbolizer repeat-distance="50" margin="50" size="10" fill="black" placement="line" fontset-name="book-fonts" halo-radius="1" halo-fill="white">[survey_year]</TextSymbolizer>
    </Rule> 
    <Rule>
      <Filter>[highway] = 'tertiary'  and [has_smoothness]</Filter>
      <MaxScaleDenominator>400000</MaxScaleDenominator>
      <MinScaleDenominator>100000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="8" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
        <Rule>
      <Filter>[highway] = 'tertiary'</Filter>
      <MaxScaleDenominator>100000</MaxScaleDenominator>
      <MinScaleDenominator>50000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="8" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
   <Rule>
      <Filter>[highway] = 'tertiary' and [has_smoothness]</Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="9" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'tertiary'and [has_smoothness] </Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      
      <TextSymbolizer repeat-distance="50" margin="50" size="11" fill="#000" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>

       <Rule>
      <Filter>[highway] = 'tertiary' </Filter>
      <MaxScaleDenominator>50000</MaxScaleDenominator>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="9" fill="black" halo-fill="white" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'tertiary'</Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      
      <TextSymbolizer repeat-distance="50" margin="50" size="11" fill="#000" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>

    <!--
    <Rule>
      &maxscale_zoom13;
      &minscale_zoom15;
      <Filter>[highway] = 'proposed' or [highway]='construction'</Filter>
      <TextSymbolizer size="9" fill="#000" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
    </Rule>
    <Rule>
      &maxscale_zoom16;
      &minscale_zoom18;
      <Filter>[highway] = 'proposed' or [highway]='construction'</Filter>
      <TextSymbolizer size="11" fill="#000" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
      </Rule>
      -->
    <Rule>
      <Filter>[highway] = 'unclassified' or [highway] = 'residential'  and [has_smoothness]</Filter>
      <MaxScaleDenominator>25000</MaxScaleDenominator>
      <MinScaleDenominator>12500</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="8" fill="#000" spacing="300" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'unclassified' or [highway] = 'residential'  and [has_smoothness] </Filter>
      <MaxScaleDenominator>12500</MaxScaleDenominator>
      <MinScaleDenominator>5000</MinScaleDenominator>
      <TextSymbolizer repeat-distance="50" margin="50" size="9" fill="#000" spacing="300" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <Rule>
      <Filter>[highway] = 'unclassified' or [highway] = 'residential'  and [has_smoothness] </Filter>
      <MaxScaleDenominator>5000</MaxScaleDenominator>
      
      <TextSymbolizer repeat-distance="50" margin="50" size="11" fill="#000" spacing="400" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <!--
    <Rule>
      <ElseFilter/>
      &maxscale_zoom15;
      &minscale_zoom16;
      <TextSymbolizer size="9" fill="#000" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
    </Rule>
    <Rule>
      <ElseFilter/>
      &maxscale_zoom17;
      &minscale_zoom18;
      <TextSymbolizer size="11" fill="#000" placement="line" fontset-name="book-fonts" halo-radius="1">[survey_year]</TextSymbolizer>
      </Rule>
-->
</Style>

<Layer name="roads" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>roads</StyleName>
    <Datasource>
      <Parameter name="table">
	(select way,
	
	case when smoothness='excellent' then '#0000ff'
	when smoothness='good' then '#376f00'
	when smoothness='intermediate' then '#ff9f00'
	when smoothness='bad' or smoothness='very_bad' then '#ff0000'
	when smoothness='horrible' or smoothness='very_horrible' or smoothness='impassable' then '#ff00ff'
	end as color,
	
	case when highway='motorway' or highway='motorway_link' then 1.5
	when highway='trunk' or highway='trunk_link' then 0.7
	else 0 end as stroke56,

	case when highway='motorway' or highway='motorway_link' then 3.2
	when highway='trunk' or highway='trunk_link' then 1.5
	else 0 end as stroke7,

	case when highway='motorway' or highway='motorway_link' then 3.2
	when highway='trunk' or highway='trunk_link' then 1.5
	when highway='primary' or highway='primary_link' then 1.5
	else 0 end as stroke8,

--	case when highway='motorway' or highway='motorway_link' then 3.2
--	when highway='trunk' or highway='trunk_link' then 1.5
--	when highway='primary' or highway='primary_link' then 0.7
--	when highway='secondary' or highway='secondary_link' then 1.1
--	else 0 end as stroke8,

	case when highway='motorway' or highway='motorway_link' then 4.2
	when highway='trunk' or highway='trunk_link' then 2.2
	when highway='primary' or highway='primary_link' then 1.5
	when highway='secondary' or highway='secondary_link' then 1.3
	else 0 end as stroke9,

	case when highway='motorway' or highway='motorway_link' then 5.2
	when highway='trunk' or highway='trunk_link' then 2.2
	when highway='primary' or highway='primary_link' then 1.9
	when highway='secondary' or highway='secondary_link' then 1.3
	else 0 end as stroke10,

	case when highway='motorway' or highway='motorway_link' then 5.3
	when highway='trunk' or highway='trunk_link' then 2.8
	when highway='primary' or highway='primary_link' then 2.5
	when highway='secondary' or highway='secondary_link' then 2.2
	when highway='tertiary' or highway='tertiary_link' then 2.1
	else 0 end as stroke11,

	case when highway='motorway' or highway='motorway_link' then 5.3
	when highway='trunk' or highway='trunk_link' then 2.8
	when highway='primary' or highway='primary_link' then 2.5
	when highway='secondary' or highway='secondary_link' then 2.2
	else 2.1 end as stroke13,

	case when surface in ('asphalt', 'paved', 'sett', 'paving_stones', 'cobblestone', 'metal') or surface like 'concrete%' then '1,0' else '3,3' end as dash56,
	case when surface in ('asphalt', 'paved', 'sett', 'paving_stones', 'cobblestone', 'metal') or surface like 'concrete%' then '1,0' else '3,3' end as dash7,
	case when surface in ('asphalt', 'paved', 'sett', 'paving_stones', 'cobblestone', 'metal') or surface like 'concrete%' then '1,0' else '3,3' end as dash8,
	case when surface in ('asphalt', 'paved', 'sett', 'paving_stones', 'cobblestone', 'metal') or surface like 'concrete%' then '1,0' else '5,5' end as dash9,
	case when surface in ('asphalt', 'paved', 'sett', 'paving_stones', 'cobblestone', 'metal') or surface like 'concrete%' then '1,0' else '5,5' end as dash10,
	case when surface in ('asphalt', 'paved', 'sett', 'paving_stones', 'cobblestone', 'metal') or surface like 'concrete%' then '1,0' else '5,5' end as dash11
	
       from roads
       where highway is not null and not (highway='construction') and not (highway='proposed') and smoothness is not null and (access is null or access in ('yes', 'permissive', 'discouraged', 'forestry', 'destination', 'customers'))
       order by z_order
      ) as roads
      </Parameter>
      <!--
Settings for your postgres setup.

Note: feel free to leave password, host, port, or use blank
-->

<Parameter name="type">postgis</Parameter>
<Parameter name="password"/>
<Parameter name="host"></Parameter>
<Parameter name="port"/>
<Parameter name="user"/>
<Parameter name="dbname">gis</Parameter>
<!-- this should be 'false' if you are manually providing the 'extent' -->
<Parameter name="estimate_extent">false</Parameter>
<!-- manually provided extent in epsg 900913 for whole globe -->
<!-- providing this speeds up Mapnik database queries -->
<Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>

    </Datasource>
</Layer>

<Layer name="roads-rehab" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <StyleName>roads</StyleName>
    <Datasource>
      <Parameter name="table">
	(select way,
	
	case when highway='motorway' or highway='motorway_link' then 1.5
	when highway='trunk' or highway='trunk_link' then 0.7
	else 0 end as stroke56,

	
	case when highway='motorway' or highway='motorway_link' then 3.2
	when highway='trunk' or highway='trunk_link' then 1.5
	else 0 end as stroke7,
	
	case when highway='motorway' or highway='motorway_link' then 3.2
	when highway='trunk' or highway='trunk_link' then 1.5
	when highway='primary' or highway='primary_link' then 1.5
	else 0 end as stroke8,

	case when highway='motorway' or highway='motorway_link' then 4.2
	when highway='trunk' or highway='trunk_link' then 2.2
	when highway='primary' or highway='primary_link' then 1.5
	when highway='secondary' or highway='secondary_link' then 1.3
	else 0 end as stroke9,

--	case when highway='motorway' or highway='motorway_link' then 4.2
--	when highway='trunk' or highway='trunk_link' then 2.2
--	when highway='primary' or highway='primary_link' then 1.5
--	when highway='secondary' or highway='secondary_link' then 1.3
--	else 0 end as stroke9,

	case when highway='motorway' or highway='motorway_link' then 5.2
	when highway='trunk' or highway='trunk_link' then 2.2
	when highway='primary' or highway='primary_link' then 1.9
	when highway='secondary' or highway='secondary_link' then 1.3
	else 0 end as stroke10,

	case when highway='motorway' or highway='motorway_link' then 5.3
	when highway='trunk' or highway='trunk_link' then 2.8
	when highway='primary' or highway='primary_link' then 2.5
	when highway='secondary' or highway='secondary_link' then 2.2
	when highway='tertiary' or highway='tertiary_link' then 2.1
	else 0 end as stroke11,

	case when highway='motorway' or highway='motorway_link' then 5.3
	when highway='trunk' or highway='trunk_link' then 2.8
	when highway='primary' or highway='primary_link' then 2.5
	when highway='secondary' or highway='secondary_link' then 2.2
	else 2.1 end as stroke13,
	'3,8' as dash56,
	'3,8' as dash7,
	'3,8' as dash8,
	'5,10' as dash9,
	'5,10' as dash10,
	'5,10' as dash11,

	'#0000ff' as color
	
       from roads
       where highway is not null and not (highway='construction') and not (highway='proposed') and surface_survey like '%REHAB%' and (access is null or access in ('yes', 'permissive', 'discouraged', 'forestry', 'destination', 'customers'))
      ) as roads
      </Parameter>
      <!--
Settings for your postgres setup.

Note: feel free to leave password, host, port, or use blank
-->

<Parameter name="type">postgis</Parameter>
<Parameter name="password"/>
<Parameter name="host"></Parameter>
<Parameter name="port"/>
<Parameter name="user"/>
<Parameter name="dbname">gis</Parameter>
<!-- this should be 'false' if you are manually providing the 'extent' -->
<Parameter name="estimate_extent">false</Parameter>
<!-- manually provided extent in epsg 900913 for whole globe -->
<!-- providing this speeds up Mapnik database queries -->
<Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>

    </Datasource>
</Layer>
<!--
<Layer name="roads-text-ref-low-zoom" status="on" srs="&osm2pgsql_projection;">
     <StyleName>roads-text-ref-low-zoom</StyleName>
     <Datasource>
      <Parameter name="table">
      (select way,highway,ref,char_length(ref) as length
       from &prefix;_roads
       where highway in ('motorway','trunk','primary','secondary')
         and ref is not null
         and char_length(ref) between 1 and 8
      ) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<Layer name="roads-text-ref" status="on" srs="&osm2pgsql_projection;">
     <StyleName>roads-text-ref</StyleName>
     <Datasource>
      <Parameter name="table">
      (select way,highway,aeroway,ref,char_length(ref) as length,
       case when bridge in ('yes','true','1','viaduct','swing','lift') then 'yes'::text else bridge end as bridge
       from &prefix;_line
       where (highway is not null or aeroway is not null)
         and ref is not null
         and char_length(ref) between 1 and 8
      ) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
    </Layer>

-->
<Layer name="roads-text-name" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
     <StyleName>roads-text-name</StyleName>
     <Datasource>
      <Parameter name="table">
	(select way,highway, 
	case when ref is not null then ref else name end as name,
	case when surface_survey is not null then (regexp_matches(surface_survey, '\d\d\d\d'))[1] else '' end as survey_year,
	smoothness is not null as has_smoothness
	
       from roads
       where (surface_survey is not null or name is not null or ref is not null) and (access is null or access in ('yes', 'permissive', 'discouraged', 'forestry', 'destination', 'customers'))
      ) as roads
      </Parameter>
<!--
      <Parameter name="table">
      (select way,highway, case when surface_survey is not null then (regexp_matches(surface_survey, '\d\d\d\d'))[1] else name end as name
       from &prefix;_line
       where osm_id>0 and 
         waterway IS NULL
         and leisure IS NULL
         and landuse IS NULL
         and (surface_survey is not null or name is not null)
      ) as roads
      </Parameter>
-->
      <!--
Settings for your postgres setup.

Note: feel free to leave password, host, port, or use blank
-->

<Parameter name="type">postgis</Parameter>
<Parameter name="password"/>
<Parameter name="host"></Parameter>
<Parameter name="port"/>
<Parameter name="user"/>
<Parameter name="dbname">gis</Parameter>
<!-- this should be 'false' if you are manually providing the 'extent' -->
<Parameter name="estimate_extent">false</Parameter>
<!-- manually provided extent in epsg 900913 for whole globe -->
<!-- providing this speeds up Mapnik database queries -->
<Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>

    </Datasource>
</Layer>

</Map>
